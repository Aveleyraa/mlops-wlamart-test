name: Train SageMaker Pipeline

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Ambiente (dev/prod)"
        required: true
        default: "dev"
      aws_region:
        description: "AWS Region"
        required: true
        default: "us-east-2"
      execute_pipeline:
        description: "Ejecutar pipeline (true/false)"
        required: true
        default: "true"
  push:
    branches: [ main ]

concurrency:
  group: train-${{ github.ref_name }}-${{ inputs.env || 'dev' }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  ENV: ${{ inputs.env || 'dev' }}
  AWS_REGION: ${{ inputs.aws_region || 'us-east-2' }}
  SM_EXECUTE_PIPELINE: ${{ inputs.execute_pipeline || 'true' }}
  COMPANY_NAME: ${{ secrets.COMPANY_NAME }}
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  SAGEMAKER_PIPELINE_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/AmazonSageMakerServiceCatalogProductsUseRole

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.10" }

      - name: Install package & tooling
        run: |
          python -m pip install --upgrade pip
          pip install -U . botocore boto3
          ls -la

  tests:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.9" }
      - name: Run tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox


  train-frecuency-planner:
    runs-on: ubuntu-latest
    needs: [tests]
    env:
      SM_MODEL_NAME: frecuency-planner
      SM_MODEL_MODULE: frecuency_opt
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.10" }

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gha-train-frecuency

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install boto3

      - name: Build tags & kwargs and run SageMaker Pipeline
        shell: bash
        env:
          API_KEY_HERE: ${{ secrets.API_KEY_HERE }}
          API_KEY_MAP_BOX: ${{ secrets.API_KEY_MAP_BOX }}
        run: |
          set -euo pipefail

          SAGEMAKER_PROJECT_ID="${COMPANY_NAME}-${PROJECT_NAME}-${ENV}-${SM_MODEL_NAME}"
          SAGEMAKER_PROJECT_ARN="${COMPANY_NAME}-${PROJECT_NAME}-${ENV}-${SM_MODEL_NAME}"
          ARTIFACT_BUCKET="${COMPANY_NAME}-${PROJECT_NAME}-${ENV}-staging-data"
          SM_MODEL_NAME_ID="${COMPANY_NAME}-${PROJECT_NAME}-${ENV}-${SM_MODEL_NAME}"

          TAGS='[{"Key":"sagemaker:project-name","Value":"'"${SM_MODEL_NAME}"'"},
                 {"Key":"sagemaker:project-id","Value":"'"${SAGEMAKER_PROJECT_ID}"'"}]'

          read -r -d '' KWARGS <<'JSON'
          {
            "region": "__AWS_REGION__",
            "sagemaker_project_arn": "__SAGEMAKER_PROJECT_ARN__",
            "role": "__SAGEMAKER_PIPELINE_ROLE_ARN__",
            "default_bucket": "__ARTIFACT_BUCKET__",
            "pipeline_name": "__SM_MODEL_NAME_ID__",
            "model_package_group_name": "__SM_MODEL_NAME_ID__",
            "base_job_prefix": "__SM_MODEL_NAME_ID__",
            "company_name": "__COMPANY_NAME__",
            "project_name": "__PROJECT_NAME__",
            "environment": "__ENV__",
            "api_key_here": "__API_KEY_HERE__",
            "api_key_map_box": "__API_KEY_MAP_BOX__"
          }
          JSON

          KWARGS=${KWARGS//__AWS_REGION__/${AWS_REGION}}
          KWARGS=${KWARGS//__SAGEMAKER_PROJECT_ARN__/${SAGEMAKER_PROJECT_ARN}}
          KWARGS=${KWARGS//__SAGEMAKER_PIPELINE_ROLE_ARN__/${SAGEMAKER_PIPELINE_ROLE_ARN}}
          KWARGS=${KWARGS//__ARTIFACT_BUCKET__/${ARTIFACT_BUCKET}}
          KWARGS=${KWARGS//__SM_MODEL_NAME_ID__/${SM_MODEL_NAME_ID}}
          KWARGS=${KWARGS//__COMPANY_NAME__/${COMPANY_NAME}}
          KWARGS=${KWARGS//__PROJECT_NAME__/${PROJECT_NAME}}
          KWARGS=${KWARGS//__ENV__/${ENV}}
          KWARGS=${KWARGS//__API_KEY_HERE__/${API_KEY_HERE}}
          KWARGS=${KWARGS//__API_KEY_MAP_BOX__/${API_KEY_MAP_BOX}}

          echo "ðŸš€ Ejecutando SageMaker Pipeline para mÃ³dulo ${SM_MODEL_MODULE}"
          
          run-pipeline --module-name pipelines.${SM_MODEL_MODULE}.pipeline \
            --execute-pipeline "${SM_EXECUTE_PIPELINE}" \
            --role-arn "${SAGEMAKER_PIPELINE_ROLE_ARN}" \
            --tags "${TAGS}" \
            --kwargs "${KWARGS}"

